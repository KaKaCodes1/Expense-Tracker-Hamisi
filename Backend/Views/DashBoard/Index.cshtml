@{
    ViewData["Title"] = "Home Page";
}
@using System.Text.Json
@using System.Text.Json.Serialization

@model Backend.Models.IncomeExpenses

<div class="dashboard">
    @* Info tabs section *@
    <h3>Welcome,<b> @ViewBag.Username</b>! </h3>
    <div class="info-tabs">
        <div class="tab">
            <div class="tab-content">
                <h2 class="tab-heading">Total Income</h2>
                <p class="tab-value">Sh @(Model?.TotalIncome ?? 0)</p> <!-- TODO What if there are no income records? -->
            </div>
        </div>

        <div class="tab">
            <div class="tab-content">
                <h2 class="tab-heading">Total Expenses</h2>
                <p class="tab-value">Sh @(Model?.TotalExpense ?? 0)</p>
            </div>
        </div>

        <div class="tab">
            <div class="tab-content">
                <h2 class="tab-heading">Balance</h2>
                <p class="tab-value">Sh @((Model?.TotalIncome ?? 0) - (Model?.TotalExpense ?? 0))</p>
            </div>
        </div>
    </div>

    @* Charts Section  *@
    <div class="charts">
        
        <div class="chart-container" >
            <h3 class="chart-title">Expenses by Category</h3>
            @* Pie chart goes here *@
            <div id="pie-container">

            </div>
        </div>

        <div class="chart-container">
            <h3 class="chart-title">Monthly Overview</h3>
            @* Bar chart goes here *@
            <div id="bar-container">

            </div>
        </div>
    </div>

    @* Section selector buttons *@
    <div class="selector-tab">
        <button id="income-tab" class="section-button active">Income</button>
        <button id="expense-tab" class="section-button">Expense</button>
    </div>


    @* Income form *@
    <div class="form-container">
        @Html.Partial("_IncomeForm") @* Load Income Table by Default*@
        @Html.Partial("_ExpenseForm")@* Load Expense Form After Income*@
    </div>

    @* Income Table section *@
    <div class="table-container">
        @await Html.PartialAsync("_IncomeTable") @* Load Income Table by Default*@
        @await Html.PartialAsync("_ExpenseTable")@* Load Expense Table after Income*@
    </div>

    <!-- This is where the modal will be loaded -->
    <div id="editExpenseContainer"></div>
    <div id="editIncomeContainer"></div>


    <div id="data-container" 
        data-info='@Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewData["ChartData"], new System.Text.Json.JsonSerializerOptions { ReferenceHandler = System.Text.Json.Serialization.ReferenceHandler.IgnoreCycles }))
'>
    </div>


    @* jQuery *@
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

    @* CanvasJS *@
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js">
    const categoryData = @Html.Raw(ViewData["ChartData"]);
    </script>


    @* To help the custom.js have access to the models *@
    <input type="hidden" id="totalIncome" value="@Model.TotalIncome" />
    <input type="hidden" id="totalExpense" value="@Model.TotalExpense" />

</div> @* End of dashboard *@
